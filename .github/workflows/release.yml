name: CI Release
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  QUALITY_GATES_AND_TESTS:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[sonar skip]')"
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Analysis and Wait for Quality Gate
        run: |
          ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url="https://sonarcloud.io" \
          -Dsonar.organization=obligatorio-devops-2021 \
          -Dsonar.projectKey=orders-service-obligatorio \
          -Dsonar.qualitygate.wait=true
  RELEASE_AND_PUSH-IMAGE:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    needs: [QUALITY_GATES_AND_TESTS]
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # JDK 8 para build ['java-version', 'java-package', 'architecture', 'jdkFile', 'server-id', 'server-username', 'server-password','settings-path', 'gpg-private-key', 'gpg-passphrase']
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
          server-id: github
          server-username: ${{ github.actor}}
          server-password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set user and email
        run: |
          git config --global user.name "${{ github.actor}}"
          git config --global user.email "${{ github.actor }}@gmail.com"
      # Package with Maven & jib profile to build & push docker image
      - name: Release
        run: "./mvnw -B -X -Dusername=${{ secret.USERNAME }} -DprivateKey=${{ secret.KEY }} release:prepare release:perform -Pjib -Darguments=\"$RELEASE_ARGUMENTS\""
        env:
          RELEASE_ARGUMENTS: -DskipTests=true -Djib.to.auth.username=${{ secrets.HUB_DOCKER_USERNAME }} -Djib.to.auth.password=${{ secrets.HUB_DOCKER_PASSWORD }}